da8533f7f2803d5090891a7615a0f81c
"use strict";
//import container from "../../../../../../app/dependency-injection";
//const fs = require('fs/promises');
jest.mock('fs', () => ({
    promises: {
        writeFile: jest.fn(),
        readFile: jest.fn()
    },
}));
describe('Service Test', () => {
    //let nodeAppService: any;
    beforeAll(() => {
        //nodeAppService = container.get("service.NodeAppService")
    });
    afterEach(() => {
        jest.clearAllMocks();
    });
    it('Should return an object for readfile', async () => {
        /*
        jest.spyOn(fs,"readFile").mockImplementationOnce(()=>{
            console.log("reading file mocked");
            return Promise.resolve();
        });
        */
        //const res = await nodeAppService.readNodeAppFile("file");
        //console.log(res);
        //expect(res.foo).toBe("bar");
        expect(1).toBe(1);
    });
});
