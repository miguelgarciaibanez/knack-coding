6103f38a6ab90eea69a44164e2bca272
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ContainerBuilder", {
  enumerable: true,
  get: function get() {
    return _ContainerBuilder["default"];
  }
});
Object.defineProperty(exports, "JsFileLoader", {
  enumerable: true,
  get: function get() {
    return _JsFileLoader["default"];
  }
});
Object.defineProperty(exports, "JsonFileLoader", {
  enumerable: true,
  get: function get() {
    return _JsonFileLoader["default"];
  }
});
Object.defineProperty(exports, "YamlFileLoader", {
  enumerable: true,
  get: function get() {
    return _YamlFileLoader["default"];
  }
});
Object.defineProperty(exports, "PackageReference", {
  enumerable: true,
  get: function get() {
    return _PackageReference["default"];
  }
});
Object.defineProperty(exports, "Reference", {
  enumerable: true,
  get: function get() {
    return _Reference["default"];
  }
});
Object.defineProperty(exports, "PassConfig", {
  enumerable: true,
  get: function get() {
    return _PassConfig["default"];
  }
});
Object.defineProperty(exports, "Definition", {
  enumerable: true,
  get: function get() {
    return _Definition["default"];
  }
});
Object.defineProperty(exports, "TagReference", {
  enumerable: true,
  get: function get() {
    return _TagReference["default"];
  }
});
var _ContainerBuilder = _interopRequireDefault(require("./ContainerBuilder"));
var _JsFileLoader = _interopRequireDefault(require("./Loader/JsFileLoader"));
var _JsonFileLoader = _interopRequireDefault(require("./Loader/JsonFileLoader"));
var _YamlFileLoader = _interopRequireDefault(require("./Loader/YamlFileLoader"));
var _PackageReference = _interopRequireDefault(require("./PackageReference"));
var _Reference = _interopRequireDefault(require("./Reference"));
var _PassConfig = _interopRequireDefault(require("./PassConfig"));
var _Definition = _interopRequireDefault(require("./Definition"));
var _TagReference = _interopRequireDefault(require("./TagReference"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJfQ29udGFpbmVyQnVpbGRlciIsIl9Kc0ZpbGVMb2FkZXIiLCJfSnNvbkZpbGVMb2FkZXIiLCJfWWFtbEZpbGVMb2FkZXIiLCJfUGFja2FnZVJlZmVyZW5jZSIsIl9SZWZlcmVuY2UiLCJfUGFzc0NvbmZpZyIsIl9EZWZpbml0aW9uIiwiX1RhZ1JlZmVyZW5jZSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwib2JqIiwiX19lc01vZHVsZSJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29udGFpbmVyQnVpbGRlclwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfQ29udGFpbmVyQnVpbGRlcltcImRlZmF1bHRcIl07XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSnNGaWxlTG9hZGVyXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9Kc0ZpbGVMb2FkZXJbXCJkZWZhdWx0XCJdO1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkpzb25GaWxlTG9hZGVyXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9Kc29uRmlsZUxvYWRlcltcImRlZmF1bHRcIl07XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiWWFtbEZpbGVMb2FkZXJcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX1lhbWxGaWxlTG9hZGVyW1wiZGVmYXVsdFwiXTtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQYWNrYWdlUmVmZXJlbmNlXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9QYWNrYWdlUmVmZXJlbmNlW1wiZGVmYXVsdFwiXTtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJSZWZlcmVuY2VcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcbiAgICByZXR1cm4gX1JlZmVyZW5jZVtcImRlZmF1bHRcIl07XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUGFzc0NvbmZpZ1wiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfUGFzc0NvbmZpZ1tcImRlZmF1bHRcIl07XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRGVmaW5pdGlvblwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgIHJldHVybiBfRGVmaW5pdGlvbltcImRlZmF1bHRcIl07XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVGFnUmVmZXJlbmNlXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgcmV0dXJuIF9UYWdSZWZlcmVuY2VbXCJkZWZhdWx0XCJdO1xuICB9XG59KTtcblxudmFyIF9Db250YWluZXJCdWlsZGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9Db250YWluZXJCdWlsZGVyXCIpKTtcblxudmFyIF9Kc0ZpbGVMb2FkZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL0xvYWRlci9Kc0ZpbGVMb2FkZXJcIikpO1xuXG52YXIgX0pzb25GaWxlTG9hZGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9Mb2FkZXIvSnNvbkZpbGVMb2FkZXJcIikpO1xuXG52YXIgX1lhbWxGaWxlTG9hZGVyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9Mb2FkZXIvWWFtbEZpbGVMb2FkZXJcIikpO1xuXG52YXIgX1BhY2thZ2VSZWZlcmVuY2UgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL1BhY2thZ2VSZWZlcmVuY2VcIikpO1xuXG52YXIgX1JlZmVyZW5jZSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vUmVmZXJlbmNlXCIpKTtcblxudmFyIF9QYXNzQ29uZmlnID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9QYXNzQ29uZmlnXCIpKTtcblxudmFyIF9EZWZpbml0aW9uID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9EZWZpbml0aW9uXCIpKTtcblxudmFyIF9UYWdSZWZlcmVuY2UgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL1RhZ1JlZmVyZW5jZVwiKSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IFwiZGVmYXVsdFwiOiBvYmogfTsgfSJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWkEsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sRUFBRSxZQUFZLEVBQUU7RUFDM0NDLEtBQUssRUFBRTtBQUNULENBQUMsQ0FBQztBQUNGSCxNQUFNLENBQUND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