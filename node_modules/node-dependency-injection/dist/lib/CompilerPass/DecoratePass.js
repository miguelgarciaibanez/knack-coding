"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var DecoratePass = /*#__PURE__*/function () {
  function DecoratePass() {
    _classCallCheck(this, DecoratePass);
  }

  _createClass(DecoratePass, [{
    key: "_processDefinitionKeys",
    value:
    /**
     * @param {string} definitionId
     * @private
     */
    function _processDefinitionKeys(definitionId) {
      var definition = this._container.definitions.get(definitionId);

      if (definition.decorationPriority) {
        this._priority[definition.decorationPriority] = {
          name: definitionId,
          definition: definition
        };
      } else if (definition.decoratedService && !definitionId.includes(DecoratePass.POSTFIX_INNER)) {
        this._priority.push({
          name: definitionId,
          definition: definition
        });
      }
    }
    /**
     * @param {object} decorate
     * @private
     */

  }, {
    key: "_processDecorates",
    value: function _processDecorates(decorate) {
      this._container.setDefinition("".concat(decorate.name, ".").concat(DecoratePass.POSTFIX_INNER), this._container.definitions.get(decorate.definition.decoratedService));

      decorate.definition["public"] = true;

      this._container.setDefinition(decorate.definition.decoratedService, decorate.definition);
    }
    /**
     * @param {ContainerBuilder} container
     */

  }, {
    key: "process",
    value: function process(container) {
      this._container = container;
      this._priority = [];

      var _iterator = _createForOfIteratorHelper(container.definitions.keys()),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var definitionId = _step.value;

          this._processDefinitionKeys(definitionId);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      var decorates = this._priority.filter(function (item) {
        return item !== null;
      });

      var _iterator2 = _createForOfIteratorHelper(decorates),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var decorate = _step2.value;

          this._processDecorates(decorate);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
  }], [{
    key: "POSTFIX_INNER",
    get:
    /**
     * @return {string}
     */
    function get() {
      return 'inner';
    }
  }]);

  return DecoratePass;
}();

exports["default"] = DecoratePass;